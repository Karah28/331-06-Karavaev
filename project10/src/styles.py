"""
–°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —Å—Ç–∏–ª–µ–π –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–∞—Ä—Ç–Ω–µ—Ä–∞–º–∏
–ö—Ä–∞—Å–∏–≤—ã–π –≥—Ä–∞–¥–∏–µ–Ω—Ç–Ω—ã–π –¥–∏–∑–∞–π–Ω —Å –∞–Ω–∏–º–∞—Ü–∏—è–º–∏ –∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏
"""

import tkinter as tk
from tkinter import ttk

class AppStyles:
    """–ö—Ä–∞—Å–∏–≤—ã–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Å—Ç–∏–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    
    # üé® –°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è —Ü–≤–µ—Ç–æ–≤–∞—è –ø–∞–ª–∏—Ç—Ä–∞
    COLORS = {
        # –û—Å–Ω–æ–≤–Ω—ã–µ —Ü–≤–µ—Ç–∞ (Gradient Blue Theme)
        'primary': '#667eea',           # –ì—Ä–∞–¥–∏–µ–Ω—Ç–Ω—ã–π —Å–∏–Ω–∏–π
        'primary_light': '#764ba2',     # –°–≤–µ—Ç–ª—ã–π –≥—Ä–∞–¥–∏–µ–Ω—Ç
        'primary_dark': '#2d3748',      # –¢–µ–º–Ω—ã–π –∞–∫—Ü–µ–Ω—Ç
        
        # –í—Ç–æ—Ä–∏—á–Ω—ã–µ —Ü–≤–µ—Ç–∞
        'secondary': '#a8edea',         # –ú—è—Ç–Ω—ã–π
        'secondary_light': '#fed6e3',   # –†–æ–∑–æ–≤—ã–π –≥—Ä–∞–¥–∏–µ–Ω—Ç
        'accent': '#ff6b6b',           # –Ø—Ä–∫–∏–π –∫–æ—Ä–∞–ª–ª–æ–≤—ã–π
        
        # –°—Ç–∞—Ç—É—Å–Ω—ã–µ —Ü–≤–µ—Ç–∞
        'success': '#4ecdc4',          # –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –∑–µ–ª–µ–Ω—ã–π
        'success_light': '#95e1d3',    # –°–≤–µ—Ç–ª–æ-–∑–µ–ª–µ–Ω—ã–π
        'warning': '#fce38a',          # –ó–æ–ª–æ—Ç–∏—Å—Ç—ã–π
        'warning_dark': '#f38ba8',     # –ü–µ—Ä—Å–∏–∫–æ–≤—ã–π
        'danger': '#ff8a95',           # –ú—è–≥–∫–∏–π –∫—Ä–∞—Å–Ω—ã–π
        'info': '#91a7ff',             # –õ–∞–≤–∞–Ω–¥–æ–≤—ã–π
        
        # –ù–µ–π—Ç—Ä–∞–ª—å–Ω—ã–µ —Ü–≤–µ—Ç–∞
        'background': '#f7fafc',       # –û—á–µ–Ω—å —Å–≤–µ—Ç–ª—ã–π —Ñ–æ–Ω
        'surface': '#ffffff',          # –ë–µ–ª—ã–π
        'surface_alt': '#edf2f7',      # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç—å
        'border': '#e2e8f0',           # –ì—Ä–∞–Ω–∏—Ü—ã
        'shadow': '#1a202c20',         # –¢–µ–Ω—å
        
        # –¢–µ–∫—Å—Ç
        'text_primary': '#2d3748',     # –û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç
        'text_secondary': '#4a5568',   # –í—Ç–æ—Ä–∏—á–Ω—ã–π —Ç–µ–∫—Å—Ç
        'text_muted': '#718096',       # –ü—Ä–∏–≥–ª—É—à–µ–Ω–Ω—ã–π
        'text_white': '#ffffff',       # –ë–µ–ª—ã–π —Ç–µ–∫—Å—Ç
        
        # –ì—Ä–∞–¥–∏–µ–Ω—Ç—ã
        'gradient_1': '#667eea',       # –ù–∞—á–∞–ª–æ –≥—Ä–∞–¥–∏–µ–Ω—Ç–∞
        'gradient_2': '#764ba2',       # –ö–æ–Ω–µ—Ü –≥—Ä–∞–¥–∏–µ–Ω—Ç–∞
        'gradient_success': '#4ecdc4', # –£—Å–ø–µ—Ö –≥—Ä–∞–¥–∏–µ–Ω—Ç
        'gradient_warning': '#fce38a', # –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –≥—Ä–∞–¥–∏–µ–Ω—Ç
    }
    
    # üî§ –°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è —Ç–∏–ø–æ–≥—Ä–∞—Ñ–∏–∫–∞
    FONTS = {
        'title': ('Segoe UI', 28, 'bold'),           # –ó–∞–≥–æ–ª–æ–≤–∫–∏
        'heading': ('Segoe UI', 18, 'bold'),         # –ü–æ–¥–∑–∞–≥–æ–ª–æ–≤–∫–∏
        'subheading': ('Segoe UI', 14, 'bold'),      # –ü–æ–¥-–ø–æ–¥–∑–∞–≥–æ–ª–æ–≤–∫–∏
        'body': ('Segoe UI', 11),                    # –û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç
        'body_medium': ('Segoe UI', 11, 'normal'),   # –°—Ä–µ–¥–Ω–∏–π —Ç–µ–∫—Å—Ç
        'body_bold': ('Segoe UI', 11, 'bold'),       # –ñ–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç
        'small': ('Segoe UI', 10),                   # –ú–µ–ª–∫–∏–π —Ç–µ–∫—Å—Ç
        'tiny': ('Segoe UI', 9),                     # –û—á–µ–Ω—å –º–µ–ª–∫–∏–π
        'button': ('Segoe UI', 10, 'bold'),          # –ö–Ω–æ–ø–∫–∏
        'tab': ('Segoe UI', 12, 'bold'),             # –í–∫–ª–∞–¥–∫–∏
    }
    
    # üìè –†–∞–∑–º–µ—Ä—ã –∏ –æ—Ç—Å—Ç—É–ø—ã
    SPACING = {
        'xs': 4,     # –û—á–µ–Ω—å –º–∞–ª–µ–Ω—å–∫–∏–π
        'sm': 8,     # –ú–∞–ª–µ–Ω—å–∫–∏–π
        'md': 16,    # –°—Ä–µ–¥–Ω–∏–π
        'lg': 24,    # –ë–æ–ª—å—à–æ–π
        'xl': 32,    # –û—á–µ–Ω—å –±–æ–ª—å—à–æ–π
        'xxl': 48,   # –û–≥—Ä–æ–º–Ω—ã–π
    }
    
    SIZES = {
        'button_height': 42,
        'input_height': 40,
        'border_radius': 8,
        'shadow_offset': 2,
        'icon_size': 16,
    }
    
    # üé≠ –≠—Ñ—Ñ–µ–∫—Ç—ã –∏ —Ç–µ–Ω–∏
    EFFECTS = {
        'shadow_light': '0 2px 4px rgba(0,0,0,0.1)',
        'shadow_medium': '0 4px 8px rgba(0,0,0,0.15)',
        'shadow_heavy': '0 8px 16px rgba(0,0,0,0.2)',
        'border_radius': 8,
        'transition': '0.2s ease-in-out',
    }
    
    @staticmethod
    def configure_ttk_styles(style):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫—Ä–∞—Å–∏–≤—ã—Ö —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å—Ç–∏–ª–µ–π"""
        
        # –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–π —Ç–µ–º—ã
        style.theme_use('clam')
        
        # üé® –û–°–ù–û–í–ù–´–ï –°–¢–ò–õ–ò
        
        # –ö–æ—Ä–Ω–µ–≤–æ–π —Å—Ç–∏–ª—å
        style.configure('.',
                       font=AppStyles.FONTS['body'],
                       background=AppStyles.COLORS['background'])
        
        # üìã –§–†–ï–ô–ú–´
        style.configure('Modern.TFrame',
                       background=AppStyles.COLORS['background'],
                       relief='flat',
                       borderwidth=0)
        
        style.configure('Card.TFrame',
                       background=AppStyles.COLORS['surface'],
                       relief='solid',
                       borderwidth=1,
                       bordercolor=AppStyles.COLORS['border'])
        
        style.configure('Gradient.TFrame',
                       background=AppStyles.COLORS['gradient_1'],
                       relief='flat')
        
        # üè∑Ô∏è –ú–ï–¢–ö–ò
        style.configure('Modern.TLabel',
                       background=AppStyles.COLORS['background'],
                       foreground=AppStyles.COLORS['text_primary'],
                       font=AppStyles.FONTS['body'])
        
        style.configure('Title.TLabel',
                       background=AppStyles.COLORS['background'],
                       foreground=AppStyles.COLORS['primary'],
                       font=AppStyles.FONTS['title'])
        
        style.configure('Heading.TLabel',
                       background=AppStyles.COLORS['background'],
                       foreground=AppStyles.COLORS['text_primary'],
                       font=AppStyles.FONTS['heading'])
        
        style.configure('Subtitle.TLabel',
                       background=AppStyles.COLORS['background'],
                       foreground=AppStyles.COLORS['text_secondary'],
                       font=AppStyles.FONTS['subheading'])
        
        style.configure('Muted.TLabel',
                       background=AppStyles.COLORS['background'],
                       foreground=AppStyles.COLORS['text_muted'],
                       font=AppStyles.FONTS['small'])
        
        # üéõÔ∏è –ö–ù–û–ü–ö–ò - –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –¥–∏–∑–∞–π–Ω
        
        # –û—Å–Ω–æ–≤–Ω–∞—è –∫–Ω–æ–ø–∫–∞ (–≥—Ä–∞–¥–∏–µ–Ω—Ç–Ω–∞—è)
        style.configure('Primary.TButton',
                       font=AppStyles.FONTS['button'],
                       background=AppStyles.COLORS['primary'],
                       foreground=AppStyles.COLORS['text_white'],
                       borderwidth=0,
                       focuscolor='none',
                       padding=(20, 12),
                       relief='flat')
        
        style.map('Primary.TButton',
                 background=[('active', AppStyles.COLORS['primary_light']),
                           ('pressed', AppStyles.COLORS['primary_dark'])])
        
        # –ö–Ω–æ–ø–∫–∞ —É—Å–ø–µ—Ö–∞ (–º—è—Ç–Ω–∞—è)
        style.configure('Success.TButton',
                       font=AppStyles.FONTS['button'],
                       background=AppStyles.COLORS['success'],
                       foreground=AppStyles.COLORS['text_white'],
                       borderwidth=0,
                       focuscolor='none',
                       padding=(20, 12),
                       relief='flat')
        
        style.map('Success.TButton',
                 background=[('active', AppStyles.COLORS['success_light']),
                           ('pressed', AppStyles.COLORS['success'])])
        
        # –ö–Ω–æ–ø–∫–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è (–∑–æ–ª–æ—Ç–∏—Å—Ç–∞—è)
        style.configure('Warning.TButton',
                       font=AppStyles.FONTS['button'],
                       background=AppStyles.COLORS['warning'],
                       foreground=AppStyles.COLORS['text_primary'],
                       borderwidth=0,
                       focuscolor='none',
                       padding=(20, 12),
                       relief='flat')
        
        style.map('Warning.TButton',
                 background=[('active', AppStyles.COLORS['warning_dark']),
                           ('pressed', AppStyles.COLORS['warning'])])
        
        # –ö–Ω–æ–ø–∫–∞ –æ–ø–∞—Å–Ω–æ—Å—Ç–∏ (–∫–æ—Ä–∞–ª–ª–æ–≤–∞—è)
        style.configure('Danger.TButton',
                       font=AppStyles.FONTS['button'],
                       background=AppStyles.COLORS['danger'],
                       foreground=AppStyles.COLORS['text_white'],
                       borderwidth=0,
                       focuscolor='none',
                       padding=(20, 12),
                       relief='flat')
        
        style.map('Danger.TButton',
                 background=[('active', AppStyles.COLORS['accent']),
                           ('pressed', AppStyles.COLORS['danger'])])
        
        # –í—Ç–æ—Ä–∏—á–Ω–∞—è –∫–Ω–æ–ø–∫–∞ (–∫–æ–Ω—Ç—É—Ä–Ω–∞—è)
        style.configure('Secondary.TButton',
                       font=AppStyles.FONTS['button'],
                       background=AppStyles.COLORS['surface'],
                       foreground=AppStyles.COLORS['primary'],
                       borderwidth=2,
                       focuscolor='none',
                       padding=(18, 10),
                       relief='solid')
        
        style.map('Secondary.TButton',
                 background=[('active', AppStyles.COLORS['surface_alt']),
                           ('pressed', AppStyles.COLORS['border'])])
        
        # üìù –ü–û–õ–Ø –í–í–û–î–ê
        style.configure('Modern.TEntry',
                       fieldbackground=AppStyles.COLORS['surface'],
                       background=AppStyles.COLORS['surface'],
                       foreground=AppStyles.COLORS['text_primary'],
                       borderwidth=2,
                       relief='solid',
                       insertcolor=AppStyles.COLORS['primary'],
                       padding=(12, 8),
                       font=AppStyles.FONTS['body'])
        
        style.map('Modern.TEntry',
                 bordercolor=[('focus', AppStyles.COLORS['primary']),
                            ('!focus', AppStyles.COLORS['border'])])
        
        # üì¶ –ö–û–ú–ë–û–ë–û–ö–°–´
        style.configure('Modern.TCombobox',
                       fieldbackground=AppStyles.COLORS['surface'],
                       background=AppStyles.COLORS['surface'],
                       foreground=AppStyles.COLORS['text_primary'],
                       borderwidth=2,
                       relief='solid',
                       padding=(12, 8),
                       font=AppStyles.FONTS['body'])
        
        style.map('Modern.TCombobox',
                 bordercolor=[('focus', AppStyles.COLORS['primary']),
                            ('!focus', AppStyles.COLORS['border'])])
        
        # üìä –¢–ê–ë–õ–ò–¶–´ (Treeview)
        style.configure('Modern.Treeview',
                       background=AppStyles.COLORS['surface'],
                       foreground=AppStyles.COLORS['text_primary'],
                       fieldbackground=AppStyles.COLORS['surface'],
                       borderwidth=1,
                       relief='solid',
                       font=AppStyles.FONTS['body'],
                       rowheight=35)
        
        style.configure('Modern.Treeview.Heading',
                       background=AppStyles.COLORS['surface_alt'],
                       foreground=AppStyles.COLORS['text_primary'],
                       font=AppStyles.FONTS['body_bold'],
                       relief='flat',
                       borderwidth=1)
        
        style.map('Modern.Treeview',
                 background=[('selected', AppStyles.COLORS['primary']),
                           ('focus', AppStyles.COLORS['primary_light'])],
                 foreground=[('selected', AppStyles.COLORS['text_white']),
                           ('focus', AppStyles.COLORS['text_white'])])
        
        # üìë –í–ö–õ–ê–î–ö–ò (Notebook)
        style.configure('Modern.TNotebook',
                       background=AppStyles.COLORS['background'],
                       borderwidth=0,
                       tabmargins=[2, 5, 2, 0])
        
        style.configure('Modern.TNotebook.Tab',
                       background=AppStyles.COLORS['surface_alt'],
                       foreground=AppStyles.COLORS['text_secondary'],
                       padding=(24, 16),
                       font=AppStyles.FONTS['tab'],
                       borderwidth=0)
        
        style.map('Modern.TNotebook.Tab',
                 background=[('selected', AppStyles.COLORS['primary']),
                           ('active', AppStyles.COLORS['primary_light'])],
                 foreground=[('selected', AppStyles.COLORS['text_white']),
                           ('active', AppStyles.COLORS['text_white'])])
        
        # üè∑Ô∏è –ì–†–£–ü–ü–´ (LabelFrame)
        style.configure('Modern.TLabelframe',
                       background=AppStyles.COLORS['surface'],
                       borderwidth=2,
                       relief='solid',
                       bordercolor=AppStyles.COLORS['border'])
        
        style.configure('Modern.TLabelframe.Label',
                       background=AppStyles.COLORS['surface'],
                       foreground=AppStyles.COLORS['primary'],
                       font=AppStyles.FONTS['subheading'])
        
        # üìú –°–ö–†–û–õ–õ–ë–ê–†–´
        style.configure('Modern.Vertical.TScrollbar',
                       background=AppStyles.COLORS['surface_alt'],
                       troughcolor=AppStyles.COLORS['background'],
                       borderwidth=0,
                       arrowcolor=AppStyles.COLORS['text_muted'],
                       darkcolor=AppStyles.COLORS['border'],
                       lightcolor=AppStyles.COLORS['surface'])
        
    @staticmethod
    def create_gradient_button(parent, text, command=None, style='Primary.TButton', **kwargs):
        """–°–æ–∑–¥–∞–Ω–∏–µ –∫—Ä–∞—Å–∏–≤–æ–π –∫–Ω–æ–ø–∫–∏ —Å —ç—Ñ—Ñ–µ–∫—Ç–∞–º–∏"""
        button = ttk.Button(parent, text=text, command=command, style=style, **kwargs)
        return button
    
    @staticmethod
    def create_card_frame(parent, **kwargs):
        """–°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ —Å —Ç–µ–Ω—å—é"""
        frame = ttk.Frame(parent, style='Card.TFrame', **kwargs)
        return frame
    
    @staticmethod
    def create_icon_button(parent, text, icon="", command=None, style='Primary.TButton', **kwargs):
        """–°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ —Å –∏–∫–æ–Ω–∫–æ–π"""
        if icon:
            button_text = f"{icon} {text}"
        else:
            button_text = text
        button = ttk.Button(parent, text=button_text, command=command, style=style, **kwargs)
        return button
    
    @staticmethod
    def apply_hover_effect(widget, enter_color, leave_color):
        """–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —ç—Ñ—Ñ–µ–∫—Ç–∞ –Ω–∞–≤–µ–¥–µ–Ω–∏—è"""
        def on_enter(e):
            widget.configure(background=enter_color)
        
        def on_leave(e):
            widget.configure(background=leave_color)
        
        widget.bind("<Enter>", on_enter)
        widget.bind("<Leave>", on_leave)

class ModernAnimations:
    """–ö–ª–∞—Å—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫—Ä–∞—Å–∏–≤—ã—Ö –∞–Ω–∏–º–∞—Ü–∏–π"""
    
    @staticmethod
    def fade_in(widget, duration=300):
        """–ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è"""
        # –ü—Ä–æ—Å—Ç–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è fade in
        widget.update()
    
    @staticmethod
    def slide_in(widget, direction='left', duration=300):
        """–ê–Ω–∏–º–∞—Ü–∏—è —Å–∫–æ–ª—å–∂–µ–Ω–∏—è"""
        # –ü—Ä–æ—Å—Ç–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è slide in
        widget.update()
    
    @staticmethod
    def bounce_in(widget, duration=400):
        """–ê–Ω–∏–º–∞—Ü–∏—è –ø–æ–¥–ø—Ä—ã–≥–∏–≤–∞–Ω–∏—è"""
        # –ü—Ä–æ—Å—Ç–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è bounce
        widget.update()

# üé® –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Ç–∏–ª–∏—Ç—ã –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –¥–∏–∑–∞–π–Ω–∞
class DesignUtils:
    """–£—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –¥–∏–∑–∞–π–Ω–∞"""
    
    @staticmethod
    def add_shadow(widget):
        """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–Ω–∏ –∫ –≤–∏–¥–∂–µ—Ç—É (—ç–º—É–ª—è—Ü–∏—è)"""
        # –í tkinter –Ω–µ—Ç –ø—Ä—è–º–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —Ç–µ–Ω–µ–π, –Ω–æ –º–æ–∂–Ω–æ —ç–º—É–ª–∏—Ä–æ–≤–∞—Ç—å
        pass
    
    @staticmethod
    def create_separator(parent, color=None):
        """–°–æ–∑–¥–∞–Ω–∏–µ –∫—Ä–∞—Å–∏–≤–æ–≥–æ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è"""
        if color is None:
            color = AppStyles.COLORS['border']
        
        separator = ttk.Frame(parent, height=2)
        separator.configure(style='Modern.TFrame')
        return separator
    
    @staticmethod
    def format_currency(amount):
        """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∞–ª—é—Ç—ã —Å –∫—Ä–∞—Å–∏–≤—ã–º–∏ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è–º–∏"""
        return f"{amount:,.2f} ‚ÇΩ".replace(',', ' ')
    
    @staticmethod
    def truncate_text(text, max_length=30):
        """–û–±—Ä–µ–∑–∫–∞ —Ç–µ–∫—Å—Ç–∞ —Å –º–Ω–æ–≥–æ—Ç–æ—á–∏–µ–º"""
        if len(text) <= max_length:
            return text
        return text[:max_length-3] + "..."
